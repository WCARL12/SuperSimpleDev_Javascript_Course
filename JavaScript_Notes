Lesson 1: JavaScript Basic
Used website “supersimple.dev/js-basics/”
alert(text); 
This allows a pop-up on the screen of the website
alert(‘Hello, World’);

You can use the console as the calculation

document.body.InnerHTML = ‘(text)’ ;
This replaces the entire code with the text you inputted on the document.body.InnerHTML = “(input_text)” ;
There will be no images, li, a, but whatever text you inputted

Lesson 2: Numbers and Math 

Did mostly calculate numbers with the amazon website
supersimple.dev/projects/amazon

Learned new function Math.round(float_num)
Make sure to use Capital ‘M’ for Math
Rounds to the nearest integer
Math.round(2.2) / output = 2
Math.round((2095 + 799) * 0.1) / 100

Converting into 2 decimal places using conversions. Note: Only know 2 decimal places
20.95 + 7.99 + 18.99) -> Output: 47.92999999999999 
Then turn everything to an integer, no decimals.  Use order of precedence then divide by 100
(2095 + 799 + 1899) / 100 -> Output 47.93

Easier function to round numbers are .toFixed(round_to_nearest…)
Math.ceil() and Math.floor()

Summary of the lesson:
Numbers and Math
Order of Operations, and Brackets (...)
Calculated the numbers in final project 
Calculations using floats can be inaccurate
Math.round()

Lesson 3:

Pretty much learned how to concat letters (super easy!!!)
Working with different type values like str int,bool
Learned type coercion. For example: ‘string’ + 3 -> output: “string3”
The process of automatic or implicit conversion of values from one datatype to another
Javascript calculator left to right (might affect calculations)
‘$’ + 20.95 + 7.99 -> Output '$20.957.99' *Incorrect*
‘$’ + (20.95 + 7.99) -> '$28.93…' *Correct*

Summary of what I learned 
String = text
Use strings and numbers together
Three ways to create a strings:
‘...’ (single string / single quotes)
“...” (double string / double quotes)
`...` or 	(template string)
Equivalent to f-string
Escape Characters: \n \’
Interpolation -> `${calculation or variable}` equivalent to f-string
Multiline String -> `dfds  (Shift + Enter)
Dfs (Shift + Enter)
Dsfsdf ` 

Lesson 4: HTML, CSS Review, console.log()

HTML: creates the content
CSS: changes the appearance
JavaScript: makes it interactive
Learned html elements (Basics!!!):
<button>, <p>
opening , closing tags
Nesting means element inside of element
<p>Hello <button>World!</button></p>
If you have extra spaces it will only display 1 spaces
<p>Hello      World</p> == -> <p>Hello World</p>
Learned how to style

<style> 
	button {
		background-color:red
}	(property): (value)
</style>

HTML Attributes: changes the behavior of an element
<button title=’Good job!’>
title (attribute name) = ‘Good Job!’ (attribute value)

Basic structure of HTML file:
<head>: contains information about the page. Anything that is not visible is typically inside the head
<title>, <style>, <>
<body>: Elements the user can see
You can search word wrap on the settings of visual studio code to prevent lines from extending too far and turn word wrap on
You can use <script at the very end of the <body> to write Javascript code

<body>
<p>Some Text</p>
<a>Some Link</a>
<script>
	alert(‘Hello’)
</script>
</body>

You can also run JavaScript using the ‘onclick’. With this once you click the element it will run the JavaScript code

<button onclick=”alert(Good Job!)”
>
  Hello
</button>

He also talked about comments which you already know: 
In CSS you can do multi-line comments 
/* a comment
 This is multi line comment
*/

// Javascript comment
console.log(): This displays the values in the console of the website that you input inside the console.log()

Summarization of what I learned
Reviewed basics of HTML and CSS
Set up VSCODE (you already know this)
Load JavaScript inside an HTML file <script>, onclick=’’
Comments
console.log
